<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
	<!-- ******************** 게시글 관련 ********************** -->

	<!-- 01. 게시글 전체 목록 조회 및 검색조회까지 -->
	<select id="listAll" resultType="com.example.spring02.model.board.dto.BoardVO">
		
		<!-- 01. 회원권환이 없는 게시글 목록 쿼리
		SELECT bno, title, content, writer, regdate, viewcnt 
		FROM tbl_board -->
		
		<!-- 02. 회원 권한이 있는 게시글 목록 쿼리
		SELECT bno, title, content, b.regdate, viewcnt, user_name AS userName
		FROM tbl_board b, tbl_member m -->
		<!-- WHERE절을 include 태그로 삽입 -->
		<!-- <include refid="search"></include>
		ORDER BY bno desc, regdate desc -->
		
		<!-- 03. 페이지 나누기를 포함한 게시글 목록 -->
		<!-- 페이징 -->
		<include refid="pagingHeader"></include>
			SELECT 
				ROWNUM, bno, title, content, b.regdate, viewcnt, user_name AS userName, show, 
				<!-- **댓글숫자표시 -->
				(SELECT COUNT(*) FROM tbl_reply WHERE bno=b.bno) AS recnt,
				(select count(*) from tbl_attach where bno=b.bno) as filecnt
			FROM 
				tbl_board b, tbl_member m
			<!-- 검색조건 -->
			<include refid="search"></include>
			ORDER BY bno DESC, b.regdate DESC 
		<!-- 페이징 -->
		<include refid="pagingFooter"></include>	
	</select>
	
	<!-- 02_02. 게시글 레코드 갯수 -->
	<select id="countArticle" resultType="int">
		SELECT COUNT(*) 
		FROM 
			tbl_board b, tbl_member m
		<!-- WHERE절을 include 태그로 삽입 -->
		<include refid="search"></include>
	</select>
	
	<!-- 02_01. 게시글 작성 -->
	<insert id="insert">
		<!-- 게시글 번호를 시퀀스로 생성 -->
		INSERT INTO tbl_board (
		  bno, title, content, writer, show
		) VALUES (
		  seq_board.NEXTVAL, #{title}, #{content}, #{writer}, 'y'
		)
		<!-- 게시글 번호를 서브쿼리로 생성 -->
		<!-- INSERT INTO tbl_board (
		  bno, title, content, writer, show
		) VALUES (
		  (SELECT NVL(MAX(bno)+1, 1)FROM tbl_board), #{title}, #{content}, #{writer}, 'y'
		) -->
	</insert>
	
	<!--03. 게시글 상세보기 조회 -->
	<select id="view" resultType="com.example.spring02.model.board.dto.BoardVO">
		<!-- SELECT * FROM tbl_board  -->
		SELECT 
			bno, title, content, b.regdate, writer, viewcnt, user_name AS userName, show
		FROM 
			tbl_board b, tbl_member m
		WHERE 
			b.writer = m.user_id 
		AND 
			bno = #{bno}
	</select>
	
	<!-- 04. 게시글 조회수 증가처리 -->
	<update id="increaseViewcnt">
		UPDATE 
			tbl_board 
		SET 
			viewcnt = viewcnt + 1 
		WHERE 
			bno = #{bno}
	</update>
	
	<!-- 05. 게시글 수정처리 -->
	<update id="updateArticle">
		UPDATE 
			tbl_board 
		SET
			title = #{title},
			content = #{content}
			<!-- writer = #{writer} -->
		WHERE 
			bno = #{bno}
	</update>
	
	<!-- 06. 게시글 삭제처리 -->
	<!-- 게시물을 삭제처리하지 않고, 삭제의 유무 상태만 변경 -->
	<update id="deleteArticle">
		UPDATE 
			tbl_board
		SET 
			show = 'n'
		WHERE 
			bno = #{bno}
	</update>
	<!-- <delete id="deleteArticle">
		DELETE FROM tbl_board
		WHERE bno = #{bno}
	</delete> -->
	<!-- sql code 조각 -->
	<!-- 반복되는 sql의 일부를 sql태그를 이용하여 따로 빼둘수 있다. -->
	<!-- 검색 조건 sql -->
	<sql id="search">
		<choose>
			<!-- 검색옵션이 전체 검색일 경우 -->
			<when test="searchOption == 'all'">
				WHERE 
					b.writer = m.user_id
				AND	
					(user_name like '%'||#{keyword}||'%'
				OR 
					content like '%'||#{keyword}||'%'
				OR 
					title like '%'||#{keyword}||'%')
			</when>
			<!-- 전체 검색이 아닐 경우 -->
			<otherwise>
				WHERE 
					b.writer = m.user_id 
				AND 
					${searchOption} like '%'||#{keyword}||'%'
			</otherwise>
		</choose>
	</sql>
	
	<!-- 페이징 sql -->
	<sql id="pagingHeader">
		SELECT * FROM (
			SELECT ROWNUM AS rn, A.* FROM (
	</sql>
	<sql id="pagingFooter">
			) A
		) WHERE rn BETWEEN #{start} AND #{end}
	</sql>
	
	
	<!-- ******************** 게시글 첨부파일 관련 ********************** -->
	
	<!-- 01. 게시물의 첨부파일 목록 -->
	<select id="getAttach" resultType="String">
		SELECT fullname FROM tbl_attach WHERE bno = #{bno} ORDER BY regdate
	</select>
	
	<!-- 02. 게시물 첨부파일 추가 -->
	<insert id="addAttach">
		<!-- CURRVAL : 현재의 값 -->
		INSERT INTO tbl_attach (
			fullname, bno
		) VALUES (
			#{fullName}, seq_board.CURRVAL
		)
	</insert>
	
	<!-- 03. 게시글의 첨부파일 업데이트처리(입력처리) -->
	<insert id="updateAttach">
		INSERT INTO tbl_attach (
			fullname, bno
		) VALUES (
			#{fullName}, #{bno}
		)
	</insert>
	
	<!-- 03. 게시글의 첨부파일 삭제처리 -->
	<delete id="deleteAttach">
		DELETE FROM tbl_attach WHERE fullname = #{fullname}
	</delete>
	
</mapper>